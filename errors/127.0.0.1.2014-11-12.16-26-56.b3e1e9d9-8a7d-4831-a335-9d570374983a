(dp1
S'output'
p2
S"<type 'exceptions.IndentationError'> unexpected indent (default.py, line 63)"
p3
sS'layer'
p4
S'/home/tlubitz/web2py/applications/SBtab/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\nimport tablib\nimport tablibIO\nimport validatorSBtab\nimport sbml2sbtab\nimport sbtab2sbml\nimport libsbml\nimport splitTabs\nimport tablib.packages.xlrd as xlrd\n\ndef index():\n    session.ex_warning = None\n    if not session.has_key(\'name2doc\'):\n        session.name2doc = {}\n    redirect(URL(\'../../static/introduction.html\'))\n\ndef clearsession():\n    session.sbtabs = []\n    session.sbtab_filenames = []\n    session.sbtab_docnames = []\n    session.sbtab_types = []\n    session.name2doc = {}\n    session.todeletename = []\n    \n    session.ex_warning = \'\'\n    #session.definition_file = []\n    #session.definition_file_name = []\n\n    session.sbmls = []\n    session.sbml_filenames = []\n\n    redirect(URL(\'../../static/introduction.html\'))\n\ndef validator():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n    """\n    #response.flash = T("Welcome to web2py!")\n    #session.clear()\n    response.title    = T(\'SBtab - Standardised data tables for Systems Biology\')\n    response.subtitle = T(\'Online Validator\')\n\n    lform = SQLFORM.factory(Field(\'File\', \'upload\',uploadfolder="/tmp", label=\'Upload SBtab file (.csv, .xls)\'))\n\n    #update session lists\n    if lform.process().accepted:\n        response.flash = \'form accepted\'\n        session.ex_warning = None\n        #try:\n            FileValidClass = validatorSBtab.ValidateFile(session.sbtabs[int(request.vars.validate_button)],session.sbtab_filenames[int(request.vars.validate_button)])\n            separator      = FileValidClass.checkseparator(session.sbtabs[int(request.vars.validate_button)])\n            (sbtab_list,types,docs) = splitTabs.checkTabs([request.vars.File.value],request.vars.File.filename,separator=separator)\n            if not session.has_key(\'sbtabs\'):\n                session.sbtabs = [\'\\n\'.join(sbtab_list[0])]\n                session.sbtab_filenames = [request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]]\n                session.sbtab_docnames  = [docs[0]]\n                session.sbtab_types     = [types[0]]\n                session.todeletename    = [request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]]\n                session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]] = docs[0]\n                if len(sbtab_list) > 1:\n                    for i,sbtab in enumerate(sbtab_list[1:]):\n                        session.sbtabs.append(\'\\n\'.join(sbtab))\n                        session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.sbtab_docnames.append(docs[i])\n                        session.sbtab_types.append(types[i])\n                        session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:]] = docs[i]\n            else:\n                if len(sbtab_list) > 1:\n                    for i,sbtab in enumerate(sbtab_list):\n                        session.sbtabs.append(\'\\n\'.join(sbtab))\n                        session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.sbtab_docnames.append(docs[i])\n                        session.sbtab_types.append(types[i])\n                        session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:]] = docs[i]\n                else:\n                    session.sbtabs.append(\'\\n\'.join(sbtab_list[0]))\n                    session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                    session.sbtab_docnames.append(docs[0])\n                    session.sbtab_types.append(types[0])\n                    session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                    session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]] = docs[0]\n            #redirect(URL(\'\'))\n        #except:\n        #    session.ex_warning = \'The file that you uploaded is no valid SBtab file. Please only use .csv or .xls format. If it still does not work out, please consult the SBtab specification.\'\n    elif lform.errors:\n        response.flash = \'form has errors\'\n\n    #pushed validation button\n    if request.vars.validate_button:\n        try:\n            FileValidClass = validatorSBtab.ValidateFile(session.sbtabs[int(request.vars.validate_button)],session.sbtab_filenames[int(request.vars.validate_button)])\n            v_output       = FileValidClass.returnOutput()\n            try:\n                separator      = FileValidClass.checkseparator(session.sbtabs[int(request.vars.validate_button)])\n                new_tablib_obj = tablibIO.importSetNew(session.sbtabs[int(request.vars.validate_button)],session.sbtab_filenames[int(request.vars.validate_button)],separator=separator)\n            except:\n                new_tablib_obj = tablibIO.importSetNew(session.sbtabs[int(request.vars.validate_button)],session.sbtab_filenames[int(request.vars.validate_button)])\n\n            if new_tablib_obj:\n                if session.definition_file:\n                    TableValidClass = validatorSBtab.ValidateTable(new_tablib_obj,session.sbtab_filenames[int(request.vars.validate_button)],session.definition_file[0],session.definition_file_name[0])\n                    for itemx in TableValidClass.returnOutput():\n                        v_output.append(itemx)\n                else:\n                    TableValidClass = validatorSBtab.ValidateTable(new_tablib_obj,session.sbtab_filenames[int(request.vars.validate_button)])\n                    for itemx in TableValidClass.returnOutput():\n                        v_output.append(itemx)\n            sbtab2val  = session.sbtab_filenames[int(request.vars.validate_button)]\n            #redirect(URL(\'\'))\n            session.ex_warning = None\n        except:\n            session.ex_warning = \'Your file is corrupt. Even too corrupt to be validated. Please remove it and see the SBtab specification to try and create a better SBtab file.\'\n            v_output  = \'\'\n            sbtab2val = \'\'\n    else:\n        v_output  = \'\'\n        sbtab2val = \'\'\n\n    #pushed erase button\n    if request.vars.erase_button:\n        del session.sbtabs[int(request.vars.erase_button)]\n        del session.sbtab_filenames[int(request.vars.erase_button)]\n        del session.sbtab_docnames[int(request.vars.erase_button)]\n        del session.sbtab_types[int(request.vars.erase_button)]\n        del session.name2doc[session.todeletename[int(request.vars.erase_button)]]\n        del session.todeletename[int(request.vars.erase_button)]\n        session.ex_warning = None\n        redirect(URL(\'\'))\n\n    return dict(UPL_FORM=lform,SBTAB_LIST=session.sbtabs,NAME_LIST=session.sbtab_filenames,V_OUTPUT=v_output,SBTAB2VAL=sbtab2val,DOC_NAMES=session.sbtab_docnames,NAME2DOC=session.name2doc,EXWARNING=session.ex_warning)\n\ndef converter():\n    response.title = T(\'SBtab - Standardised data tables for Systems Biology\')\n    response.subtitle = T(\'SBML / SBtab Conversion\')\n\n    #Form for SBtab files\n    lform = SQLFORM.factory(Field(\'File\', \'upload\',uploadfolder="/tmp", label=\'Upload SBtab file to convert (.csv, .xls)\'))\n\n    #update session lists\n    if lform.process(formname=\'form_one\').accepted:\n            response.flash = \'form accepted\'\n            #try:\n            (sbtab_list,types,docs) = splitTabs.checkTabs([request.vars.File.value],request.vars.File.filename)\n            if not session.has_key(\'sbtabs\'):\n                session.sbtabs = [\'\\n\'.join(sbtab_list[0])]\n                session.sbtab_filenames = [request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]]\n                session.sbtab_docnames  = [docs[0]]\n                session.sbtab_types     = [types[0]]\n                session.todeletename    = [request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]]\n                session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]] = docs[0]\n                if len(sbtab_list) > 1:\n                    for i,sbtab in enumerate(sbtab_list[1:]):\n                        session.sbtabs.append(\'\\n\'.join(sbtab))\n                        session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.sbtab_docnames.append(docs[i])\n                        session.sbtab_types.append(types[i])\n                        session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                        session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:]] = docs[i]\n            else:\n                if len(sbtab_list) > 1:\n                    for i,sbtab in enumerate(sbtab_list):\n                        session.sbtabs.append(\'\\n\'.join(sbtab))\n                        session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:])\n                        session.sbtab_docnames.append(docs[i])\n                        session.sbtab_types.append(types[i])\n                        session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                        session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[i]+request.vars.File.filename[-4:]] = docs[i]\n                else:\n                    session.sbtabs.append(\'\\n\'.join(sbtab_list[0]))\n                    session.sbtab_filenames.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                    session.sbtab_docnames.append(docs[0])\n                    session.sbtab_types.append(types[0])\n                    session.todeletename.append(request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:])\n                    session.name2doc[request.vars.File.filename[:-4]+\'_\'+types[0]+request.vars.File.filename[-4:]] = docs[0]\n        #except:\n        #    session.ex_warning = \'The file that you uploaded is no SBtab file. Please only use .tsv, .csv, or .xls format. If it still does not work out, please consult the SBtab specification.\'\n    elif lform.errors:\n        response.flash = \'form has errors\'\n\n\n    # convert sbtab2sbml button is pushed\n    if request.vars.c2sbml_button:\n        try:\n            sbtab_document = sbtab2sbml.SBtabDocument(session.sbtabs[int(request.vars.c2sbml_button)],session.sbtab_filenames[int(request.vars.c2sbml_button)])\n            new_sbml       = sbtab_document.makeSBML()\n            if not session.has_key(\'sbmls\'):\n                session.sbmls = [new_sbml]\n                session.sbml_filenames = [session.sbtab_filenames[int(request.vars.c2sbml_button)].rstrip(\'.tcsvxl\')+\'_SBML.xml\']\n            else:\n                session.sbmls.append(new_sbml)\n                session.sbml_filenames.append(session.sbtab_filenames[int(request.vars.c2sbml_button)].rstrip(\'.tcxlsv\')+\'_SBML.xml\')\n        except:\n            session.ex_warning = \'The SBtab file could not be converted to SBML. Please check whether you have a valid Reaction SBtab file.\'\n\n    if request.vars.dl_sbtab_button:\n        downloader_sbtab()\n\n    if request.vars.convert_all_button:\n        try:\n            convert_document = session.sbtab_docnames[int(request.vars.convert_all_button)]\n            merged_sbtabs    = []\n            for i,docname in enumerate(session.sbtab_docnames):\n                if docname == convert_document:\n                    merged_sbtabs.append(session.sbtabs[i])\n            sbtab_document = sbtab2sbml.SBtabDocument(merged_sbtabs,\'merged_unknown.tsv\',tabs=2)\n            new_sbml       = sbtab_document.makeSBML()\n            if not session.has_key(\'sbmls\'):\n                session.sbmls = [new_sbml]\n                session.sbml_filenames = [convert_document+\'.xml\']\n            else:\n                session.sbmls.append(new_sbml)\n                session.sbml_filenames.append(convert_document+\'.xml\')\n        except:\n            session.ex_warning = \'The SBtab file could not be converted to SBML. Please check whether you have a valid Reaction SBtab file.\'\n\n    #Form for SBML files\n    rform = SQLFORM.factory(Field(\'File\', \'upload\',uploadfolder="/tmp", label=\'Upload SBML file to convert (.xml)\'))\n\n    if rform.process(formname=\'form_two\').accepted:\n        response.flash = \'form accepted\'\n        if not session.has_key(\'sbmls\'):\n            session.sbmls = [request.vars.File.value]\n            session.sbml_filenames = [request.vars.File.filename]\n        else:\n            session.sbmls.append(request.vars.File.value)\n            session.sbml_filenames.append(request.vars.File.filename)\n    elif rform.errors:\n        response.flash = \'form has errors\'\n\n    if request.vars.erase_sbml_button:\n        del session.sbmls[int(request.vars.erase_sbml_button)]\n        del session.sbml_filenames[int(request.vars.erase_sbml_button)]\n        session.ex_warning = None\n        redirect(URL(\'\'))\n\n    # convert sbml2sbtab button is pushed\n    if request.vars.c2sbtab_button:\n        try:\n            reader     = libsbml.SBMLReader()\n            sbml_model = reader.readSBMLFromString(session.sbmls[int(request.vars.c2sbtab_button)])\n            ConvSBMLClass = sbml2sbtab.SBMLDocument(sbml_model.getModel(),session.sbml_filenames[int(request.vars.c2sbtab_button)])\n            tab_output    = ConvSBMLClass.makeSBtabs()\n            # append generated SBtabs to session variables\n            for SBtab in tab_output:\n                if not session.has_key(\'sbtabs\'):\n                    session.sbtabs = [SBtab[0]]\n                    session.sbtab_filenames = [session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1]]\n                    session.sbtab_docnames = [session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')]\n                    session.sbtab_types    = [SBtab[1]]\n                    session.todeletename   = [session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1]]\n                    session.name2doc[session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1]] = session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')\n                else:\n                    session.sbtabs.append(SBtab[0])\n                    session.sbtab_filenames.append(session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1])\n                    session.sbtab_docnames.append(session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\'))\n                    session.sbtab_types.append(SBtab[1])\n                    session.todeletename.append(session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1])\n                    session.name2doc[session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')+\'_\'+SBtab[1]] = session.sbml_filenames[int(request.vars.c2sbtab_button)].rstrip(\'.xml\')\n            #redirect(URL(\'\'))\n        except:\n            session.ex_warning = \'The SBML file could not be converted to SBtab. Please check whether your SBML file is valid.\'\n\n    if request.vars.erase_sbtab_button:\n        del session.sbtabs[int(request.vars.erase_sbtab_button)]\n        del session.sbtab_filenames[int(request.vars.erase_sbtab_button)]\n        del session.sbtab_docnames[int(request.vars.erase_sbtab_button)]\n        del session.sbtab_types[int(request.vars.erase_sbtab_button)]\n        del session.name2doc[session.todeletename[int(request.vars.erase_sbtab_button)]]\n        del session.todeletename[int(request.vars.erase_sbtab_button)]\n        session.ex_warning = None\n        redirect(URL(\'\'))\n\n    if request.vars.dl_sbml_button:\n        downloader_sbml()\n        \n    return dict(UPL_FORML=lform,UPL_FORMR=rform,SBTAB_LIST=session.sbtabs,SBML_LIST=session.sbmls,NAME_LIST_SBTAB=session.sbtab_filenames,NAME_LIST_SBML=session.sbml_filenames,DOC_NAMES=session.sbtab_docnames,NAME2DOC=session.name2doc,EXWARNING=session.ex_warning,TYPES=session.sbtab_types)\n\n\ndef def_files():\n    \'\'\'\n    upload your own definition SBtab\n    \'\'\'\n    response.title = T(\'SBtab - Standardised data tables for Systems Biology\')\n    response.subtitle = T(\'Upload your own definition files\')\n\n    dform = SQLFORM.factory(Field(\'File\', \'upload\',uploadfolder="/tmp", label=\'Upload definition file (.csv, .tsv)\'))\n\n    #update session lists\n    if dform.process().accepted:\n        response.flash = \'form accepted\'\n        session.definition_file      = [request.vars.File.value]\n        session.definition_file_name = [request.vars.File.filename]\n    elif dform.errors:\n        response.flash = \'form has errors\'\n\n    #pushed erase button\n    if request.vars.erase_def_button:\n        del session.definition_file[int(request.vars.erase_def_button)]\n        del session.definition_file_name[int(request.vars.erase_def_button)]\n        redirect(URL(\'\'))\n\n    return dict(UPL_FORM=dform,DEF_FILE=session.definition_file,DEF_NAME=session.definition_file_name)\n\ndef downloader_sbtab():\n        response.headers[\'Content-Type\'] = \'text/csv\'\n        if not session.sbtab_filenames[int(request.vars.dl_sbtab_button)].endswith(\'.csv\') and not session.sbtab_filenames[int(request.vars.dl_sbtab_button)].endswith(\'.tsv\'):\n            attachment = \'attachment;filename=\' + session.sbtab_filenames[int(request.vars.dl_sbtab_button)]+\'.csv\'\n        else: attachment = \'attachment;filename=\' + session.sbtab_filenames[int(request.vars.dl_sbtab_button)]\n        response.headers[\'Content-Disposition\'] = attachment\n        \n        content = session.sbtabs[int(request.vars.dl_sbtab_button)]\n        raise HTTP(200,str(content),\n                   **{\'Content-Type\':\'text/csv\',\n                      \'Content-Disposition\':attachment + \';\'})\n\ndef downloader_sbml():\n        response.headers[\'Content-Type\'] = \'text/xml\'\n        if not session.sbml_filenames[int(request.vars.dl_sbml_button)].endswith(\'.xml\'):\n            attachment = \'attachment;filename=\' + session.sbml_filenames[int(request.vars.dl_sbml_button)]+\'.xml\'\n        else: attachment = \'attachment;filename=\' + session.sbml_filenames[int(request.vars.dl_sbml_button)]\n        response.headers[\'Content-Disposition\'] = attachment\n        \n        content = session.sbmls[int(request.vars.dl_sbml_button)]\n        raise HTTP(200,str(content),\n                   **{\'Content-Type\':\'text/xml\',\n                      \'Content-Disposition\':attachment + \';\'})\n\ndef show_sbtab_xls():\n    \'\'\'\n    displays xls SBtab file\n    \'\'\'\n    file_name = session.sbtab_filenames[int(request.args(0))]\n    xls_sbtab = session.sbtabs[int(request.args(0))]\n\n    nice_sbtab = \'<p><h2><b>\'+file_name+\'</b></h2></p>\'\n\n    dbook = tablib.Databook()\n    xl = xlrd.open_workbook(file_contents=xls_sbtab)\n\n    for sheetname in xl.sheet_names():\n        dset = tablib.Dataset()\n        dset.title = sheetname\n        sheet = xl.sheet_by_name(sheetname)\n        for row in range(sheet.nrows):\n            if row == 0:\n                new_row = \'\'\n                for thing in sheet.row_values(row):\n                    if not thing == \'\': new_row += thing\n                nice_sbtab += \'<a style="background-color:#A4A4A4">\'+new_row+\'</a><br>\'\n                nice_sbtab += \'<table>\'\n            elif row == 1:\n                new_row = \'\'\n                for thing in sheet.row_values(row):\n                    if not thing == \'\': new_row += \'<td>\'+thing+\'</td>\'\n                nice_sbtab += \'<tr bgcolor="#BDBDBD">\'+new_row+\'</tr>\'\n            else:\n                new_row = \'\'\n                for thing in sheet.row_values(row):\n                    new_row += \'<td>\'+thing+\'</td>\'\n                nice_sbtab += \'<tr>\'+new_row+\'</tr>\'\n                    \n    return nice_sbtab    \n\ndef show_sbtab():\n    \'\'\'\n    displays a given SBtab file\n    \'\'\'\n    file_name = session.sbtab_filenames[int(request.args(0))]\n    if file_name.endswith(\'.tsv\') or file_name.endswith(\'.csv\'):\n        delimiter = \'\\t\'\n    else: return show_sbtab_xls()\n    \n    ugly_sbtab = session.sbtabs[int(request.args(0))].split(\'\\n\')\n    nice_sbtab = \'<p><h2><b>\'+session.sbtab_filenames[int(request.args(0))]+\'</b></h2></p>\'\n\n    nice_sbtab += \'<a style="background-color:#A4A4A4">\'+ugly_sbtab[0]+\'</a><br>\'\n\n    nice_sbtab += \'<table>\'\n    for row in ugly_sbtab[1:]:\n        if row.startswith(\'!\'): nice_sbtab += \'<tr bgcolor="#BDBDBD">\'\n        else: nice_sbtab += \'<tr>\'\n        for thing in row.split(delimiter):\n            new_row = \'<td>\'+thing+\'</\\td>\'\n            nice_sbtab += new_row\n        nice_sbtab += \'</tr>\'\n    nice_sbtab += \'</table>\'\n    \n    return nice_sbtab\n\ndef show_sbml():\n    \'\'\'\n    displays a given SBML file\n    \'\'\'\n    new_sbml = \'<xmp>\'\n    old_sbml = session.sbmls[int(request.args(0))].split(\'\\n\')\n\n    for row in old_sbml:\n        new_sbml += row + \'\\n\'\n\n    new_sbml += \'</xmp>\'\n        \n    return new_sbml\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in \n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(validator)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IndentationError object>"
p13
sS'text'
p14
S"'            FileValidClass = validatorSBtab.Vali...ab_filenames[int(request.vars.validate_button)])\\n'"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.IndentationError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.IndentationError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.IndentationError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.IndentationError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.IndentationError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.IndentationError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.IndentationError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.IndentationError'>"
p35
sS'filename'
p36
S"'/home/tlubitz/web2py/applications/SBtab/controllers/default.py'"
p37
sS'lineno'
p38
S'63'
p39
sS'msg'
p40
S"'unexpected indent'"
p41
sS'__doc__'
p42
S"'Improper indentation.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.IndentationError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.IndentationError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.IndentationError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S"('unexpected indent', ('/home/tlubitz/web2py/applications/SBtab/controllers/default.py', 63, 12, '            FileValidClass = validatorSBtab.Vali...ab_filenames[int(request.vars.validate_button)])\\n'))"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'12'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.IndentationError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.IndentationError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.IndentationError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.IndentationError object>"
p65
ssS'evalue'
p66
S'unexpected indent (default.py, line 63)'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S'sqR\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>SBtab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-85c6d8e2-03ca-403a-b386-8bd8b45fdc60<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sbtab</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-62b61398-f441-485d-b650-008057b12e90<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8,de;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-85c6d8e2-03ca-403a-b386-8bd8b45fdc60; session_id_sbtab=127.0.0.1-62b61398-f441-485d-b650-008057b12e90</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/38.0.2125.111 Chrome/38.0.2125.111 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/default/validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>55113</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>isis.biologie.hu-berlin.de</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/tlubitz/web2py/applications/SBtab/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f4281871518: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;141.20.63.185&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;isis.biologie.hu-berlin.de&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/tlubitz/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;hund&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8,de;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-85c6d8e2-03ca-403a-b386-8bd8b45fdc60; session_id_sbtab=127.0.0.1-62b61398-f441-485d-b650-008057b12e90</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/38.0.2125.111 Chrome/38.0.2125.111 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>141.20.63.185</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>isis.biologie.hu-berlin.de</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/default/validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>55113</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/SBtab/default/validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>isis.biologie.hu-berlin.de</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_original_uri</td><td style="vertical-align:top;">:</td><td><div>/default/validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f4289a741e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f4281907738&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f42542869d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f4289a741e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f4281907738&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f42542869d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py/applications/SBtab/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/tlubitz/web2py/applications/SBtab/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f4281871518: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;141.20.63.185&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;isis.biologie.hu-berlin.de&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/tlubitz/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;hund&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>141.20.63.185</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>isis.biologie.hu-berlin.de</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 11, 12, 16, 26, 56, 473799)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/default/validator</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 11, 12, 15, 26, 56, 473825)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>SBtab/127.0.0.1.2014-11-12.16-26-56.b3e1e9d9-8a7d-4831-a335-9d570374983a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f4254285ad0&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/home/tlubitz/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'code'
p78
S"'# -*- coding: utf-8 -*-\\n# this file is released ...d())\\n\\nresponse._vars=response._caller(validator)\\n'"
p79
sS'layer'
p80
S"'/home/tlubitz/web2py/applications/SBtab/controllers/default.py'"
p81
sS'global compile2'
p82
S'<function compile2>'
p83
sS'ccode'
p84
S'undefined'
p85
ssS'lnum'
p86
I216
sS'lines'
p87
(dp88
I211
S"    environment['__name__'] = '__restricted__'"
p89
sI212
S'    try:'
p90
sI213
S'        if isinstance(code, types.CodeType):'
p91
sI214
S'            ccode = code'
p92
sI215
S'        else:'
p93
sI216
S'            ccode = compile2(code, layer)'
p94
sI217
S'        exec ccode in environment'
p95
sI218
S'    except HTTP:'
p96
sI219
S'        raise'
p97
sI220
S'    except RestrictedError:'
p98
ssS'call'
p99
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...d())\\n\\nresponse._vars=response._caller(validator)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/tlubitz/web2py/applications/SBtab/controllers/default.py')"
p100
sS'func'
p101
S'restricted'
p102
sa(dp103
g74
S'/home/tlubitz/web2py/gluon/restricted.py'
p104
sg76
(dp105
S'builtincompile'
p106
S'<built-in function compile>'
p107
sS'code'
p108
S"'# -*- coding: utf-8 -*-\\n# this file is released ...d())\\n\\nresponse._vars=response._caller(validator)\\n'"
p109
sS'code.rstrip'
p110
S'<built-in method rstrip of str object>'
p111
sS').replace'
p112
g85
sS'layer'
p113
S"'/home/tlubitz/web2py/applications/SBtab/controllers/default.py'"
p114
ssg86
I199
sg87
(dp115
I194
S''
sI195
S'def compile2(code, layer):'
p116
sI196
S'    """'
p117
sI197
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p118
sI198
S'    """'
p119
sI199
S"    return compile(code.rstrip().replace('\\r\\n', '\\n') + '\\n', layer, 'exec')"
p120
sI200
S''
sI201
S''
sI202
S"def restricted(code, environment=None, layer='Unknown'):"
p121
sI203
S'    """'
p122
ssg99
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...d())\\n\\nresponse._vars=response._caller(validator)\\n', layer='/home/tlubitz/web2py/applications/SBtab/controllers/default.py')"
p123
sg101
S'compile2'
p124
sasS'pyver'
p125
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p126
sS'session'
p127
g69
(S's\xd0\x05\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ex_warning</td><td style="vertical-align:top;">:</td><td><div>The file that you uploaded is no valid SBtab file. Please only use .csv or .xls format. If it still does not work out, please consult the SBtab specification.</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">name2doc</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbml_filenames</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbmls</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbtab_docnames</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbtab_filenames</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbtab_types</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sbtabs</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">todeletename</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div>'
tRp128
sS'etype'
p129
S"<type 'exceptions.IndentationError'>"
p130
sS'date'
p131
S'Wed Nov 12 16:26:56 2014'
p132
sS'response'
p133
g69
(S's\xa61\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f4254769998&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_sbtab</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-62b61398-f441-485d-b650-008057b12e90<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" data-w2p_disable_with="default" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/design/SBtab</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/edit/SBtab/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/edit/SBtab/views/default/validator.html&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/edit/SBtab/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/edit/SBtab/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/edit/SBtab/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/edit/SBtab/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/appadmin&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/errors/SBtab&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/about/SBtab&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/validator/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_sbtab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/tlubitz/web2py/applications/SBtab/sessions/127.0.0.1-62b61398-f441-485d-b650-008057b12e90&#x27;, mode &#x27;rb+&#x27; at 0x7f4281904780&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/tlubitz/web2py/applications/SBtab/sessions/127.0.0.1-62b61398-f441-485d-b650-008057b12e90</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>e53e2fdf3a13595d02425575c7c8ce5c</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-62b61398-f441-485d-b650-008057b12e90</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_sbtab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>SBtab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Sbtab</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/validator.html</div></td></tr></table></div>'
tRp134
sS'locals'
p135
(dp136
g4
S"'/home/tlubitz/web2py/applications/SBtab/controllers/default.py'"
p137
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ...d())\\n\\nresponse._vars=response._caller(validator)\\n'"
p138
sssS'traceback'
p139
S'Traceback (most recent call last):\n  File "/home/tlubitz/web2py/gluon/restricted.py", line 216, in restricted\n    ccode = compile2(code, layer)\n  File "/home/tlubitz/web2py/gluon/restricted.py", line 199, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\', \'\\n\') + \'\\n\', layer, \'exec\')\n  File "/home/tlubitz/web2py/applications/SBtab/controllers/default.py", line 63\n    FileValidClass = validatorSBtab.ValidateFile(session.sbtabs[int(request.vars.validate_button)],session.sbtab_filenames[int(request.vars.validate_button)])\n    ^\nIndentationError: unexpected indent\n'
p140
s.